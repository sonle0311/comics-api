# üìÑ PRD ‚Äì C·∫•u h√¨nh Project .NET WebAPI (Final)

---

## ‚úÖ 1. M·ª•c ti√™u

Thi·∫øt l·∫≠p m·ªôt project .NET WebAPI v·ªõi:

* Ki·∫øn tr√∫c chu·∫©n **Clean Architecture**
* T√°ch bi·ªát t·∫ßng: `Domain`, `Application`, `Infrastructure`, `WebAPI`
* H·ªó tr·ª£ **CQRS** th√¥ng qua **MediatR**
* Ghi log b·∫±ng **Serilog**
* T√≠ch h·ª£p **Swagger**
* **CORS AllowAll** khi ch·∫°y trong m√¥i tr∆∞·ªùng Development
* T·∫•t c·∫£ c·∫•u h√¨nh ƒë·ªçc t·ª´ file `.appsettings.json`, kh√¥ng hardcode th√¥ng tin

---

## üß± 2. C·∫•u tr√∫c th∆∞ m·ª•c

```
MyApp/
‚îú‚îÄ‚îÄ src/
‚îÇ   ‚îú‚îÄ‚îÄ MyApp.Domain/          # Entity, Enum, Interface
‚îÇ   ‚îú‚îÄ‚îÄ MyApp.Application/     # Command/Query + Handler (CQRS)
‚îÇ   ‚îú‚îÄ‚îÄ MyApp.Infrastructure/  # DB, external service, logging
‚îÇ   ‚îú‚îÄ‚îÄ MyApp.WebAPI/          # Controller, Program.cs
```

---

## ‚öôÔ∏è 3. C√¥ng ngh·ªá

| M·ª•c           | C√¥ng ngh·ªá                                                                           |
| ------------- | ----------------------------------------------------------------------------------- |
| Framework     | .NET 8                                                                              |
| Entity Framework     | .NET 8                                                                              |
| Database      | postgres                                                                            |
| CQRS          | [MediatR](https://github.com/jbogard/MediatR)                                       |
| Logging       | [Serilog](https://serilog.net/)                                                     |
| Swagger       | [Swashbuckle.AspNetCore](https://github.com/domaindrivendev/Swashbuckle.AspNetCore) |
| CORS Dev Only | `AllowAnyOrigin()`                                                                  |

---

## üìÇ 4. File `.appsettings.json` ‚Äì c·∫•u h√¨nh ƒë·∫ßy ƒë·ªß

``` c·∫•u h√¨nh appsettings.json
{
  "ConnectionStrings": {
    "DefaultConnection": "Host=194.233.80.2;Port=5432;Database=dmtt-database;Username=postgres;Password=Nguhachi@2025;"
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "AllowedHosts": "*",
  //otruyenapi
  "OtruyenApi": {
    "BaseUrl": "https://otruyenapi.com/v1/api"
  },
  //cdn
  "Cdn": {
    "ThumbnailBaseUrl": "https://img.otruyenapi.com/uploads/comics/",
    "ChapterCdnBaseUrl": "https://sv1.otruyencdn.com"
  }
}
```
---

## üß™ 5. Swagger

```csharp
builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new() { Title = "MyApp API", Version = "v1" });
});
```

---

## ‚úÖ 9. Checklist cu·ªëi

| H·∫°ng m·ª•c                     | Tr·∫°ng th√°i |
| ---------------------------- | ---------- |
| Clean Architecture           | ‚úÖ          |
| CQRS + MediatR               | ‚úÖ          |
| Serilog Logging              | ‚úÖ          |
| Swagger                      | ‚úÖ          |
| CORS AllowAll (Development)  | ‚úÖ          |
| API/CDN config ri√™ng bi·ªát    | ‚úÖ          |
| Kh√¥ng hardcode b·∫•t k·ª≥ config | ‚úÖ          |

---

## üéÅ G·ª£i √Ω m·ªü r·ªông

| T√≠nh nƒÉng               | G·ª£i √Ω                                                        |
| ----------------------- | ------------------------------------------------------------ |
| Docker + Docker Compose | T·∫°o file `docker-compose.override.yml`                       |
| Healthcheck endpoint    | Th√™m `/health`                                               |
| Environment switching   | `appsettings.{env}.json` v√† `appsettings.{env}.local.json`  |
| Logging                 | Ghi log ra file ho·∫∑c ELK                                    |
| Tracing                 | T√≠ch h·ª£p Jaeger ho·∫∑c Zipkin                                |
| Caching                 | T√≠ch h·ª£p Redis ho·∫∑c Memcached                              |
| Throttling              | T√≠ch h·ª£p Polly ho·∫∑c RateLimit                              |
| Environment switching   | `appsettings.{env}.json`                   |

---
